from flask import flash
from web3 import Web3
import json
#Blockchain and Contract Settings
ganache_url = "http://localhost:8545" #URL used for connecting to blockchain
w3 = Web3(Web3.HTTPProvider(ganache_url)) #web3 object created for contract deployment using URL
abi = json.loads('[ { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "constant": true, "inputs": [], "name": "countFarmer", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "name": "farmerAccts", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getFarmer", "outputs": [ { "internalType": "uint256[]", "name": "", "type": "uint256[]" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "internalType": "uint256", "name": "_fm_id", "type": "uint256" } ], "name": "getFarmer", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "string", "name": "", "type": "string" }, { "internalType": "string", "name": "", "type": "string" }, { "internalType": "string", "name": "", "type": "string" }, { "internalType": "string", "name": "", "type": "string" }, { "internalType": "string", "name": "", "type": "string" }, { "internalType": "string", "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "internalType": "uint256", "name": "_fm_id", "type": "uint256" }, { "internalType": "string", "name": "_fName", "type": "string" }, { "internalType": "string", "name": "_lName", "type": "string" }, { "internalType": "string", "name": "_doc1_hash", "type": "string" }, { "internalType": "string", "name": "_doc2_hash", "type": "string" }, { "internalType": "string", "name": "_doc3_hash", "type": "string" }, { "internalType": "string", "name": "_doc4_hash", "type": "string" } ], "name": "setFarmer", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" } ]')
bytecode = "608060405234801561001057600080fd5b506040518060400160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152506000908051906020019061005c929190610062565b50610107565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a357805160ff19168380011785556100d1565b828001600101855582156100d1579182015b828111156100d05782518255916020019190600101906100b5565b5b5090506100de91906100e2565b5090565b61010491905b808211156101005760008160009055506001016100e8565b5090565b90565b610e53806101166000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630f4b6d571461005c5780632388ec4c1461007a5780638403aef7146100d9578063ad0caa7614610491578063e51ea1c01461075b575b600080fd5b61006461079d565b6040518082815260200191505060405180910390f35b6100826107aa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100c55780820151818401526020810190506100aa565b505050509050019250505060405180910390f35b61048f600480360360e08110156100ef57600080fd5b81019080803590602001909291908035906020019064010000000081111561011657600080fd5b82018360208201111561012857600080fd5b8035906020019184600183028401116401000000008311171561014a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101ad57600080fd5b8201836020820111156101bf57600080fd5b803590602001918460018302840111640100000000831117156101e157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561024457600080fd5b82018360208201111561025657600080fd5b8035906020019184600183028401116401000000008311171561027857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102db57600080fd5b8201836020820111156102ed57600080fd5b8035906020019184600183028401116401000000008311171561030f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561037257600080fd5b82018360208201111561038457600080fd5b803590602001918460018302840111640100000000831117156103a657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561040957600080fd5b82018360208201111561041b57600080fd5b8035906020019184600183028401116401000000008311171561043d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610802565b005b6104bd600480360360208110156104a757600080fd5b81019080803590602001909291905050506108f1565b6040518088815260200180602001806020018060200180602001806020018060200187810387528d818151815260200191508051906020019080838360005b838110156105175780820151818401526020810190506104fc565b50505050905090810190601f1680156105445780820380516001836020036101000a031916815260200191505b5087810386528c818151815260200191508051906020019080838360005b8381101561057d578082015181840152602081019050610562565b50505050905090810190601f1680156105aa5780820380516001836020036101000a031916815260200191505b5087810385528b818151815260200191508051906020019080838360005b838110156105e35780820151818401526020810190506105c8565b50505050905090810190601f1680156106105780820380516001836020036101000a031916815260200191505b5087810384528a818151815260200191508051906020019080838360005b8381101561064957808201518184015260208101905061062e565b50505050905090810190601f1680156106765780820380516001836020036101000a031916815260200191505b50878103835289818151815260200191508051906020019080838360005b838110156106af578082015181840152602081019050610694565b50505050905090810190601f1680156106dc5780820380516001836020036101000a031916815260200191505b50878103825288818151815260200191508051906020019080838360005b838110156107155780820151818401526020810190506106fa565b50505050905090810190601f1680156107425780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b6107876004803603602081101561077157600080fd5b8101908080359060200190929190505050610d58565b6040518082815260200191505060405180910390f35b6000600280549050905090565b606060028054806020026020016040519081016040528092919081815260200182805480156107f857602002820191906000526020600020905b8154815260200190600101908083116107e4575b5050505050905090565b600060016000898152602001908152602001600020905086816001019080519060200190610831929190610d79565b508581600201908051906020019061084a929190610d79565b508781600001819055508481600301908051906020019061086c929190610d79565b5083816004019080519060200190610885929190610d79565b508281600501908051906020019061089e929190610d79565b50818160060190805190602001906108b7929190610d79565b5060016002899080600181540180825580915050906001820390600052602060002001600090919290919091505550505050505050505050565b60006060806060806060806001600089815260200190815260200160002060000154600160008a8152602001908152602001600020600101600160008b8152602001908152602001600020600201600160008c8152602001908152602001600020600301600160008d8152602001908152602001600020600401600160008e8152602001908152602001600020600501600160008f8152602001908152602001600020600601858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a2c5780601f10610a0157610100808354040283529160200191610a2c565b820191906000526020600020905b815481529060010190602001808311610a0f57829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ac85780601f10610a9d57610100808354040283529160200191610ac8565b820191906000526020600020905b815481529060010190602001808311610aab57829003601f168201915b50505050509450838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b645780601f10610b3957610100808354040283529160200191610b64565b820191906000526020600020905b815481529060010190602001808311610b4757829003601f168201915b50505050509350828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c005780601f10610bd557610100808354040283529160200191610c00565b820191906000526020600020905b815481529060010190602001808311610be357829003601f168201915b50505050509250818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c9c5780601f10610c7157610100808354040283529160200191610c9c565b820191906000526020600020905b815481529060010190602001808311610c7f57829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d385780601f10610d0d57610100808354040283529160200191610d38565b820191906000526020600020905b815481529060010190602001808311610d1b57829003601f168201915b505050505090509650965096509650965096509650919395979092949650565b60028181548110610d6557fe5b906000526020600020016000915090505481565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610dba57805160ff1916838001178555610de8565b82800160010185558215610de8579182015b82811115610de7578251825591602001919060010190610dcc565b5b509050610df59190610df9565b5090565b610e1b91905b80821115610e17576000816000905550600101610dff565b5090565b9056fea265627a7a723158203398260ea2508749b0667badb5213524a068d7913f379f89b8636e84be77541364736f6c63430005110032"
#ABI and Bytecode define a contract and should be changed whenever the contract has been changed

w3.eth.defaultAccount = w3.eth.accounts[0]              #This function deploys the contract onto the blockchain
Faccounts = w3.eth.contract(abi=abi, bytecode=bytecode) #and takes the address from the blockchain to create an 
tx_hash = Faccounts.constructor().transact()            #instance of the contract for this file so as to call the
tx_receipt = w3.eth.waitForTransactionReceipt(tx_hash)  #functions on the contract
contract = w3.eth.contract(
    address=tx_receipt.contractAddress,
    abi=abi,
)
